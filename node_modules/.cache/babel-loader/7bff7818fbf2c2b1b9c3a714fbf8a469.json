{"ast":null,"code":"var _jsxFileName = \"/home/roberto/\\xC1rea de Trabalho/reactjs/rocketshoes/src/pages/Cart/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { MdRemoveCircleOutline, MdAddCircleOutline, MdDelete } from 'react-icons/md';\nimport { Container, ProductTable, Total } from './styles';\nimport * as CartActions from '../../store/modules/cart/actions';\nimport { formatPrice } from '../../util/format';\n\nfunction Cart({\n  cart,\n  total,\n  removeFromCart,\n  updateAmount\n}) {\n  function increment(product) {\n    updateAmount(product.id, product.amount + 1);\n  }\n\n  function decrement(product) {\n    updateAmount(product.id, product.amount - 1);\n  }\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(ProductTable, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Produto\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Quantidade\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Subtotal\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, cart.map(product => React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: product.image,\n    alt: product.title,\n    width: 300,\n    height: 300,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, product.title), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, product.priceFormatted)), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(MdRemoveCircleOutline, {\n    size: 20,\n    color: \"#7159c1\",\n    onClick: () => decrement(product),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"number\",\n    readOnly: true,\n    value: product.amount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(MdAddCircleOutline, {\n    size: 20,\n    color: \"#7159c1\",\n    onClick: () => increment(product),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })))), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, product.subtotal)), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => removeFromCart(product.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(MdDelete, {\n    size: 20,\n    color: \"#7159c1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }))))))), React.createElement(\"footer\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Finalizar Pedido\"), React.createElement(Total, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"TOTAL\"), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"R$1920,28\"))));\n}\n\nconst mapStateToProps = state => ({\n  cart: state.cart.map(product => ({ ...product,\n    subtotal: formatPrice(product.price * product.amount)\n  })),\n  total: state.cart.reduce((total, product) => {\n    return total + product.price * product.amount;\n  }, 0)\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators(CartActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","map":{"version":3,"sources":["/home/roberto/√Årea de Trabalho/reactjs/rocketshoes/src/pages/Cart/index.js"],"names":["React","connect","bindActionCreators","MdRemoveCircleOutline","MdAddCircleOutline","MdDelete","Container","ProductTable","Total","CartActions","formatPrice","Cart","cart","total","removeFromCart","updateAmount","increment","product","id","amount","decrement","map","image","title","priceFormatted","subtotal","mapStateToProps","state","price","reduce","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {\n  MdRemoveCircleOutline,\n  MdAddCircleOutline,\n  MdDelete,\n} from 'react-icons/md';\nimport { Container, ProductTable, Total } from './styles';\nimport * as CartActions from '../../store/modules/cart/actions';\nimport { formatPrice } from '../../util/format';\n\nfunction Cart({ cart, total, removeFromCart, updateAmount }) {\n  function increment(product) {\n    updateAmount(product.id, product.amount + 1);\n  }\n  function decrement(product) {\n    updateAmount(product.id, product.amount - 1);\n  }\n\n  return (\n    <Container>\n      <ProductTable>\n        <thead>\n          <tr>\n            <th />\n            <th>Produto</th>\n            <th>Quantidade</th>\n            <th>Subtotal</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          {cart.map(product => (\n            <tr>\n              <td>\n                <img\n                  src={product.image}\n                  alt={product.title}\n                  width={300}\n                  height={300}\n                />\n              </td>\n              <td>\n                <strong>{product.title}</strong>\n                <span>{product.priceFormatted}</span>\n              </td>\n              <td>\n                <div>\n                  <button type=\"button\">\n                    <MdRemoveCircleOutline\n                      size={20}\n                      color=\"#7159c1\"\n                      onClick={() => decrement(product)}\n                    />\n                  </button>\n\n                  <input type=\"number\" readOnly value={product.amount} />\n\n                  <button type=\"button\">\n                    <MdAddCircleOutline\n                      size={20}\n                      color=\"#7159c1\"\n                      onClick={() => increment(product)}\n                    />\n                  </button>\n                </div>\n              </td>\n              <td>\n                <strong>{product.subtotal}</strong>\n              </td>\n              <td>\n                <button\n                  type=\"button\"\n                  onClick={() => removeFromCart(product.id)}\n                >\n                  <MdDelete size={20} color=\"#7159c1\" />\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </ProductTable>\n\n      <footer>\n        <button type=\"button\">Finalizar Pedido</button>\n        <Total>\n          <span>TOTAL</span>\n          <strong>R$1920,28</strong>\n        </Total>\n      </footer>\n    </Container>\n  );\n}\n\nconst mapStateToProps = state => ({\n  cart: state.cart.map(product => ({\n    ...product,\n    subtotal: formatPrice(product.price * product.amount),\n  })),\n  total: state.cart.reduce((total, product) => {\n    return total + product.price * product.amount;\n  }, 0),\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(CartActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n"]},"metadata":{},"sourceType":"module"}