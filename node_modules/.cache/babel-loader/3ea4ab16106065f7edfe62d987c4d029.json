{"ast":null,"code":"import { call, select, put, all, takeLatest } from 'redux-saga/effects';\nimport api from '../../../services/api';\nimport { addToCartSuccess, updateAmount } from './actions';\nimport { formatPrice } from '../../../util/format';\n\nfunction* addToCart({\n  id\n}) {\n  const response = yield call(api.get, `/products/${id}`);\n  const productExists = yield select(state => state.cart.find(p => p.id === id));\n  const stock = yield call(api.get, `/stock/${id}`);\n  const stockAmount = stock.data.amount;\n  const currentAmount = productExists ? productExists.amount : 0;\n\n  if (productExists) {\n    const amount = productExists.amount + 1;\n    yield put(updateAmount(id, amount));\n  } else {\n    const data = { ...response.data,\n      amount: 1,\n      priceFormatted: formatPrice(response.data.price)\n    };\n    yield put(addToCartSuccess(data));\n  }\n}\n\nexport default all([takeLatest('@cart/ADD_REQUEST', addToCart)]);","map":{"version":3,"sources":["/home/roberto/Área de Trabalho/reactjs/rocketshoes/src/store/modules/cart/sagas.js"],"names":["call","select","put","all","takeLatest","api","addToCartSuccess","updateAmount","formatPrice","addToCart","id","response","get","productExists","state","cart","find","p","stock","stockAmount","data","amount","currentAmount","priceFormatted","price"],"mappings":"AAAA,SAASA,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,EAA4BC,GAA5B,EAAiCC,UAAjC,QAAmD,oBAAnD;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,gBAAT,EAA2BC,YAA3B,QAA+C,WAA/C;AACA,SAASC,WAAT,QAA4B,sBAA5B;;AAEA,UAAUC,SAAV,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAA4B;AAC1B,QAAMC,QAAQ,GAAG,MAAMX,IAAI,CAACK,GAAG,CAACO,GAAL,EAAW,aAAYF,EAAG,EAA1B,CAA3B;AAEA,QAAMG,aAAa,GAAG,MAAMZ,MAAM,CAACa,KAAK,IACtCA,KAAK,CAACC,IAAN,CAAWC,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACP,EAAF,KAASA,EAA9B,CADgC,CAAlC;AAIA,QAAMQ,KAAK,GAAG,MAAMlB,IAAI,CAACK,GAAG,CAACO,GAAL,EAAW,UAASF,EAAG,EAAvB,CAAxB;AACA,QAAMS,WAAW,GAAGD,KAAK,CAACE,IAAN,CAAWC,MAA/B;AACA,QAAMC,aAAa,GAAGT,aAAa,GAAGA,aAAa,CAACQ,MAAjB,GAA0B,CAA7D;;AAEA,MAAIR,aAAJ,EAAmB;AACjB,UAAMQ,MAAM,GAAGR,aAAa,CAACQ,MAAd,GAAuB,CAAtC;AACA,UAAMnB,GAAG,CAACK,YAAY,CAACG,EAAD,EAAKW,MAAL,CAAb,CAAT;AACD,GAHD,MAGO;AACL,UAAMD,IAAI,GAAG,EACX,GAAGT,QAAQ,CAACS,IADD;AAEXC,MAAAA,MAAM,EAAE,CAFG;AAGXE,MAAAA,cAAc,EAAEf,WAAW,CAACG,QAAQ,CAACS,IAAT,CAAcI,KAAf;AAHhB,KAAb;AAMA,UAAMtB,GAAG,CAACI,gBAAgB,CAACc,IAAD,CAAjB,CAAT;AACD;AACF;;AAED,eAAejB,GAAG,CAAC,CAACC,UAAU,CAAC,mBAAD,EAAsBK,SAAtB,CAAX,CAAD,CAAlB","sourcesContent":["import { call, select, put, all, takeLatest } from 'redux-saga/effects';\nimport api from '../../../services/api';\nimport { addToCartSuccess, updateAmount } from './actions';\nimport { formatPrice } from '../../../util/format';\n\nfunction* addToCart({ id }) {\n  const response = yield call(api.get, `/products/${id}`);\n\n  const productExists = yield select(state =>\n    state.cart.find(p => p.id === id)\n  );\n\n  const stock = yield call(api.get, `/stock/${id}`);\n  const stockAmount = stock.data.amount;\n  const currentAmount = productExists ? productExists.amount : 0;\n\n  if (productExists) {\n    const amount = productExists.amount + 1;\n    yield put(updateAmount(id, amount));\n  } else {\n    const data = {\n      ...response.data,\n      amount: 1,\n      priceFormatted: formatPrice(response.data.price),\n    };\n\n    yield put(addToCartSuccess(data));\n  }\n}\n\nexport default all([takeLatest('@cart/ADD_REQUEST', addToCart)]);\n"]},"metadata":{},"sourceType":"module"}